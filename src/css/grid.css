/*  line based placement

#grid {
    display: grid;
    grid-template-rows: repeat(5, 1fr) ;
    grid-template-columns: repeat(7, 1fr) ;
    height: 100vh;
    box-sizing: border-box;
    padding: 10px;
}

#header {
    grid-column: 1/8;
    grid-row: 1/1;
    display: flex;
    justify-content: space-around;
}

#side {
    grid-column: 1/3;
    grid-row: 2/5;
    display: grid;
    align-items: center;
}

#content {
    grid-column: 3/8;
    grid-row: 2/5;
}

#footer {
    grid-column: 1/8;
    grid-row: 5/6;
    display: flex;
    justify-content: space-around;
    align-items: end;
} */

/* grid-template-areas */
/* #grid {
    height: 100vh;
    box-sizing: border-box;
    padding: 10px;
    display: grid;
    grid-template-rows: repeat(5, 1fr) ;
    grid-template-columns: repeat(7, 1fr) ;
    grid-template-areas: "header header header header header header header"
    "side side side content content content content" 
    "side side side content content content content"
    "side side side content content content content" 
    "side side side content content content content"
    "footer  footer  footer  footer  footer  footer  footer"
}

#header {
    grid-area: header;
    display: flex;
    justify-content: space-around;
}

#side {
    grid-area: side;
    display: grid;
    /* the reason why this works is that grid layout its children along the row by default... */
/* } */

#content {
    grid-area: content;
}

#footer {
    grid-area: footer;
    display: flex;
    justify-content: space-around;
} */


/* grid lines */

/* other concepts, span, gap, explain writing modes and give examples of other languages */
/* gap */
#grid {
    height: 100vh;
    box-sizing: border-box;
    padding: 10px;
    display: grid;
    grid-template-rows: repeat(5, 1fr) ;
    grid-template-columns: repeat(7, 1fr) ;
    /* grid-template-areas: "header header header header header header header"
    "side side side content content content content" 
    "side side side content content content content"
    "side side side content content content content" 
    "side side side content content content content"
    "footer  footer  footer  footer  footer  footer  footer" */
}

#header {
    grid-area: header;
    display: flex;
    justify-content: space-around;
}

#side {
    grid-area: side;
    display: grid;
    /* the reason why this works is that grid layout its children along the row by default... */
}

#content {
    grid-area: content;
}

#footer {
    grid-area: footer;
    display: flex;
    justify-content: space-around;
}